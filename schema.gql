# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddressInput {
  zipcode: String!
  street: String!
  number: String!
  complement: String!
}

type AddressType {
  zipcode: String!
  street: String!
  number: String!
  complement: String!
}

input BrowserInput {
  description: String!
  layout: String!
  manufacturer: String!
  name: String!
  prerelease: String!
  product: String!
  ua: String!
  version: String!
  os: OsInput!
}

type BrowserType {
  description: String!
  layout: String!
  manufacturer: String!
  name: String!
  prerelease: String!
  product: String!
  ua: String!
  version: String!
  os: OsType!
}

input ChildInput {
  name: String!
  birthday: String!
  cell_phone: String!
  gender: String!
  year: String!
  school: String!
  nationality: String!
  documents: [DocumentInput!]!
  address: AddressInput!
}

type ChildType {
  name: String!
  birthday: String!
  cell_phone: String!
  gender: String!
  year: String!
  school: String!
  nationality: String!
  documents: [DocumentType!]!
  address: AddressType!
}

input ConnectionInput {
  asn: Float!
  isp: String!
}

type ConnectionType {
  asn: Float!
  isp: String!
}

input CurrencyInput {
  code: String!
  name: String!
  plural: String!
  symbol: String!
  symbol_native: String!
}

type CurrencyType {
  code: String!
  name: String!
  plural: String!
  symbol: String!
  symbol_native: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DocumentInput {
  type: String!
  value: String!
}

type DocumentType {
  type: String!
  value: String!
}

input FingerprintInput {
  uid: String!
  token: String!
  fingerprint: String!
  url: String!
  urlQueryString: String!
  referrer: String!
  pageTitle: String!
  browser: BrowserInput!
  cookie: String!
  formMapping: String!
  ipInfo: IpInfoInput!
  partnersDenied: String!
}

type FingerprintType {
  uid: String!
  token: String!
  fingerprint: String!
  url: String!
  urlQueryString: String!
  referrer: String!
  pageTitle: String!
  browser: BrowserType!
  cookie: String!
  formMapping: String!
  ipInfo: IpInfoType!
  partnersDenied: String!
}

input IpInfoInput {
  ip: String!
  type: String!
  continent_code: String!
  continent_name: String!
  country_code: String!
  country_name: String!
  region_code: String!
  region_name: String!
  city: String!
  zip: String!
  latitude: Float!
  longitude: Float!
  location: LocationInput!
  time_zone: TimeZoneInput!
  currency: CurrencyInput!
  connection: ConnectionInput!
}

type IpInfoType {
  ip: String!
  type: String!
  continent_code: String!
  continent_name: String!
  country_code: String!
  country_name: String!
  region_code: String!
  region_name: String!
  city: String!
  zip: String!
  latitude: Float!
  longitude: Float!
  location: LocationType!
  time_zone: TimeZoneType!
  currency: CurrencyType!
  connection: ConnectionType!
}

input LanguageInput {
  code: String!
  name: String!
  native: String!
}

type LanguageType {
  code: String!
  name: String!
  native: String!
}

input LocationInput {
  geoname_id: Float!
  capital: String!
  languages: [LanguageInput!]!
  country_flag: String!
  country_flag_emoji: String!
  country_flag_emoji_unicode: String!
  calling_code: String!
  is_eu: Boolean!
}

type LocationType {
  geoname_id: Float!
  capital: String!
  languages: [LanguageType!]!
  country_flag: String!
  country_flag_emoji: String!
  country_flag_emoji_unicode: String!
  calling_code: String!
  is_eu: Boolean!
}

type Mutation {
  createRegister(input: RegisterInput!): RegisterType!
}

input OsInput {
  architecture: Float!
  family: String!
  version: String!
}

type OsType {
  architecture: Float!
  family: String!
  version: String!
}

input ParentInput {
  userPublicId: String!
  main: Boolean!
  name: String!
  email: String!
  cell_phone: String!
  phone: String!
  birthday: String!
  documents: [DocumentInput!]!
  address: AddressInput!
  responsibilities: [String!]!
}

type ParentType {
  userPublicId: String!
  main: Boolean!
  name: String!
  email: String!
  cell_phone: String!
  phone: String!
  birthday: String!
  documents: [DocumentType!]!
  address: AddressType!
  responsibilities: [String!]!
}

type Query {
  hello: String!
  register: [RegisterType!]!
}

input RegisterInput {
  document: String!
  cell_phone: String!
  activate: Boolean!
  registration_form: RegistrationFormInput!
}

type RegisterType {
  id: ID!
  document: String!
  cell_phone: String!
  activate: Boolean!
  registration_form: RegistrationFormType!
}

input RegistrationFormInput {
  current_step: String!
  steps: [StepInput!]!
  parents: [ParentInput!]!
  children: [ChildInput!]!
}

type RegistrationFormType {
  current_step: String!
  steps: [StepType!]!
  parents: [ParentType!]!
  children: [ChildType!]!
}

input StepInput {
  id: String!
  inc_date: String!
  update_date: String!
}

type StepType {
  id: String!
  inc_date: String!
  update_date: String!
}

input TimeZoneInput {
  id: String!
  current_time: DateTime!
  gmt_offset: Float!
  code: String!
  is_daylight_saving: Boolean!
}

type TimeZoneType {
  id: String!
  current_time: DateTime!
  gmt_offset: Float!
  code: String!
  is_daylight_saving: Boolean!
}
